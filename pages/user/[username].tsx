import React, {Attributes, useEffect, useState} from 'react';
import Head from 'next/head';
import MainLayout from '../../components/PagesComponents/MainLayout/MainLayout';
import {Grid} from '@mui/material';
import ProfileInfo from '../../components/PagesComponents/Profile/ProfileInfo';
import ProfilePosts from '../../components/PagesComponents/Profile/ProfilePosts';
import ProfileFriends from '../../components/PagesComponents/Profile/ProfileFriends';
import {useRouter} from 'next/router';
import Parse, {User} from 'parse';
import {encodeParseQuery, useParseQuery} from '@parse/react-ssr';
import {getUserDataById, getUserIdByUsername} from '../../parse/functions';
// import {doQueryByName, getUserIdByUsername, initializeParse} from '../../parse/functions';

// const UserPage = ({parseQuery}: any) => {
const UserPage = (props: any) => {
  console.log(props);
  useEffect(() => {
    const getUserIdByUsername = async (username: string) => {
      try {
        const parseQuery = new Parse.Query(User);
        parseQuery.contains('username', `${username}`);
        const id = await parseQuery.find();
        console.log(id);
        return id;
      } catch (e: any) {
        console.log(`Error! ${e.message}`);
        return false;
      }
    }
    getUserIdByUsername(props.id);
  }, [])

  return (
    <div>
      <Head>
        <title>SocialApes</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main>
        {/*{currentUser && (*/}
        {/*  <MainLayout>*/}
        {/*    <Grid container spacing={{ xs: 1, sm: 2, md: 3 }}>*/}
        {/*      <Grid item xs={12}>*/}
        {/*        <Grid container justifyContent='center'>*/}
        {/*          <Grid item xs={12} xl={8} >*/}
        {/*            <ProfileInfo currentUser={currentUser}/>*/}
        {/*          </Grid>*/}
        {/*        </Grid>*/}
        {/*      </Grid>*/}
        {/*      <Grid item xs={12}>*/}
        {/*        <Grid container spacing={{ xs: 1, sm: 2, md: 3 }} justifyContent='center' >*/}
        {/*          <Grid item xs={8} xl={5}>*/}
        {/*            <ProfilePosts currentUser={currentUser}/>*/}
        {/*          </Grid>*/}
        {/*          <Grid item xs={4} xl={3}>*/}
        {/*            <ProfileFriends/>*/}
        {/*          </Grid>*/}
        {/*        </Grid>*/}
        {/*      </Grid>*/}
        {/*    </Grid>*/}
        {/*  </MainLayout>*/}
        {/*)}*/}
        {`profile page`}
      </main>
    </div>
  );
};

export default UserPage;

export const getServerSideProps = async (ctx: any) => {
  // const parseQuery = new Parse.Query(User);
  // parseQuery.contains('username', `${ctx.query.username}`);
  // return {
  //   props: {
  //     parseQuery: await encodeParseQuery(parseQuery), // Return encoded Parse Query for server side rendering
  //   },
  // };

  // const id = await getUserIdByUsername(ctx.query.username);
  // return {
  //   props: {
  //     id
  //   }
  // }

  return {props: {id: ctx.query.username}}
}