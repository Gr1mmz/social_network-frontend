import React, {Attributes, SetStateAction, useEffect, useState} from 'react';
import Head from 'next/head';
import Parse, {User} from 'parse';
import {encodeParseQuery, useParseQuery} from '@parse/react-ssr';
import {Grid} from '@mui/material';
import MainLayout from '../../components/PagesComponents/MainLayout/MainLayout';
import ProfileInfo from '../../components/PagesComponents/Profile/ProfileInfo';
import ProfilePosts from '../../components/PagesComponents/Profile/ProfilePosts';
import ProfileFriends from '../../components/PagesComponents/Profile/ProfileFriends';
import {getUserDataById} from '../../parse/functions';
import Custom404 from '../404';

const UserPage = ({idQuery}: any) => {
  const [user, setUser] = useState<User<Attributes>>();
  const [error, setError] = useState(false);
  const [isOwner, setIsOwner] = useState<SetStateAction<boolean>>(false);
  const [isLoading, setIsLoading] = useState<SetStateAction<boolean>>(true);
  const {results} = useParseQuery(idQuery);

  useEffect(() => {
    (results?.length === 0)
      ? setError(true)
      : getUserDataById(`${results?.[0].id}`)
        .then(user => setUser(user))
        .then(async () => {
          const currentUser = await getCurrentUser();
          if (user?.id === currentUser?.id && !isLoading) {
            setIsOwner(true);
          }
        })
        .then(() => setIsLoading(false));
    const getCurrentUser = async () => {
      const currentUser: (Parse.User | null) = await Parse.User.currentAsync();
      return currentUser;
    };
  }, [results]);

  if (user && !isLoading) {
    return (
      <div>
        <Head>
          <title>{`${user.attributes.firstname} ${user.attributes.lastname}`} | SocialApes</title>
          <meta name='description' content='Generated by create next app' />
          <link rel='icon' href='/favicon.ico' />
        </Head>

        <main>
          <MainLayout>
            <Grid container spacing={{ xs: 1, sm: 2, md: 3 }}>
              <Grid item xs={12}>
                <Grid container justifyContent='center'>
                  <Grid item xs={12} xl={8} >
                    <ProfileInfo currentUser={user}/>
                  </Grid>
                </Grid>
              </Grid>
              <Grid item xs={12}>
                <Grid container spacing={{ xs: 1, sm: 2, md: 3 }} justifyContent='center' >
                  <Grid item xs={8} xl={5}>
                    <ProfilePosts currentUser={user} isOwner={isOwner} />
                  </Grid>
                  <Grid item xs={4} xl={3}>
                    <ProfileFriends/>
                  </Grid>
                </Grid>
              </Grid>
            </Grid>
          </MainLayout>
        </main>
      </div>
    )
  }

  if (error && !isLoading) {
    return <Custom404/>
  }
};

export default UserPage;

export const getServerSideProps = async (ctx: any) => {
  const idQuery = new Parse.Query(User);
  idQuery.equalTo('username', `${ctx.query.username}`);
  return {
    props: {
      idQuery: await encodeParseQuery(idQuery),
    },
  };

}